<script type="text/javascript">
  /* This section is (sometimes?) run immediately whent he page loads */

  // define some global variables
  var TOTAL_OPTS = 8;
  var currOpt = 0;

  // define the location in the tree
  var currNode = treeInit();

  // update the document
  updateSelections();

  /* ---------------------------------------------------------------- */

  // force the selections to be updated when the page loads AND
  // clear the form from previous selections (if the user clicked back)
  window.onload = function() {
    for (var i = currOpt; i < TOTAL_OPTS; i++) {
      var optElt = getOptObj(i);
      optElt.val('');
    }
    updateSelections();
  }

  // declare the Tree datatype
  function Tree(parent, children, id, desc) {
    this.parent = parent;
    this.children = children || [];
    this.id = id;
    this.description = desc;

    this.addChild = function(tree) {
      this.children.push(tree);
    }

    this.addChildren = function(trees) {
      this.children = this.children.concat(trees);
    }

    this.getChildById = function(id) {
      for (var i = 0; i < this.children.length; i++) {
        var child = this.children[i];
        if (child.id == id) {
          return child;
        }
      }
      return null;
    }
  }

  // initialize the decision tree right here, so we know what to display on each user input
  function treeInit() {
    // instantiate the option tree (root node)
    var OPT_TREE = new Tree(null, null, "ROOT", null);

    // define the first level of the tree
    var SEL_0_0 = new Tree(OPT_TREE, null, "Quick Workout Now", "Hit the gym nao son!");
    var SEL_0_1 = new Tree(OPT_TREE, null, "Personalized Workout Plan", "Get jacked over time...");
    var SEL_0_2 = new Tree(OPT_TREE, null, "Challenge", "u rdy bro???");

    // define the second level of the tree
    var SEL_0_0_0 = new Tree(SEL_0_0, null, "20 minutes", null);
    var SEL_0_0_1 = new Tree(SEL_0_0, null, "40 minutes", null);
    var SEL_0_0_2 = new Tree(SEL_0_0, null, "60 minutes", null);
    
    var SEL_0_1_0 = new Tree(SEL_0_1, null, "Beginner", null);
    var SEL_0_1_1 = new Tree(SEL_0_1, null, "Intermediate", null);
    var SEL_0_1_2 = new Tree(SEL_0_1, null, "Veteran", null);

    var SEL_0_2_0 = new Tree(SEL_0_2, null, "Beginner", null);
    var SEL_0_2_1 = new Tree(SEL_0_2, null, "Intermediate", null);
    var SEL_0_2_2 = new Tree(SEL_0_2, null, "Veteran", null);


    // define the third level of the tree
    // Quick Workout Now Branch
    var SEL_0_0_0_0 = new Tree(SEL_0_0_0, null, "Flex", null);
    var SEL_0_0_0_1 = new Tree(SEL_0_0_0, null, "Toned", null);
    var SEL_0_0_0_2 = new Tree(SEL_0_0_0, null, "Mass", null);

    var SEL_0_0_1_0 = new Tree(SEL_0_0_1, null, "Flex", null);
    var SEL_0_0_1_1 = new Tree(SEL_0_0_1, null, "Toned", null);
    var SEL_0_0_1_2 = new Tree(SEL_0_0_1, null, "Mass", null);

    var SEL_0_0_2_0 = new Tree(SEL_0_0_2, null, "Flex", null);
    var SEL_0_0_2_1 = new Tree(SEL_0_0_2, null, "Toned", null);
    var SEL_0_0_2_2 = new Tree(SEL_0_0_2, null, "Mass", null);

    // Personalized Workout Branch
    var SEL_0_1_0_0 = new Tree(SEL_0_1_0, null, "Mass", null);
    var SEL_0_1_0_1 = new Tree(SEL_0_1_0, null, "Toned", null);
    var SEL_0_1_0_2 = new Tree(SEL_0_1_0, null, "Flex", null);
    var SEL_0_1_0_3 = new Tree(SEL_0_1_0, null, "Core", null);

    var SEL_0_1_1_0 = new Tree(SEL_0_1_1, null, "Mass", null);
    var SEL_0_1_1_1 = new Tree(SEL_0_1_1, null, "Toned", null);
    var SEL_0_1_1_2 = new Tree(SEL_0_1_1, null, "Flex", null);
    var SEL_0_1_1_3 = new Tree(SEL_0_1_1, null, "Core", null);

    var SEL_0_1_2_0 = new Tree(SEL_0_1_2, null, "Mass", null);
    var SEL_0_1_2_1 = new Tree(SEL_0_1_2, null, "Toned", null);
    var SEL_0_1_2_2 = new Tree(SEL_0_1_2, null, "Flex", null);
    var SEL_0_1_2_3 = new Tree(SEL_0_1_2, null, "Core", null);

    // Challenge Branch
    var SEL_0_2_0_0 = new Tree(SEL_0_2_0, null, "Mass", null);
    var SEL_0_2_0_1 = new Tree(SEL_0_2_0, null, "Toned", null);
    var SEL_0_2_0_2 = new Tree(SEL_0_2_0, null, "Flex", null);
    var SEL_0_2_0_3 = new Tree(SEL_0_2_0, null, "Core", null);

    var SEL_0_2_1_0 = new Tree(SEL_0_2_1, null, "Mass", null);
    var SEL_0_2_1_1 = new Tree(SEL_0_2_1, null, "Toned", null);
    var SEL_0_2_1_2 = new Tree(SEL_0_2_1, null, "Flex", null);
    var SEL_0_2_1_3 = new Tree(SEL_0_2_1, null, "Core", null);

    var SEL_0_2_2_0 = new Tree(SEL_0_2_2, null, "Mass", null);
    var SEL_0_2_2_1 = new Tree(SEL_0_2_2, null, "Toned", null);
    var SEL_0_2_2_2 = new Tree(SEL_0_2_2, null, "Flex", null);
    var SEL_0_2_2_3 = new Tree(SEL_0_2_2, null, "Core", null);

    // define fourth level of the tree
    // Quick Workout Now Branch
    // 20 minute branch
    var SEL_0_0_0_0_0 = new Tree(SEL_0_0_0_0, null, "Upper Body Stretch", null);
    var SEL_0_0_0_0_1 = new Tree(SEL_0_0_0_0, null, "Lower Body Stretch", null);
    var SEL_0_0_0_0_2 = new Tree(SEL_0_0_0_0, null, "Full Body Stretch", null);

    var SEL_0_0_0_1_0 = new Tree(SEL_0_0_0_1, null, "Abs", null);
    var SEL_0_0_0_1_1 = new Tree(SEL_0_0_0_1, null, "Upper Body", null);
    var SEL_0_0_0_1_2 = new Tree(SEL_0_0_0_1, null, "Lower Body", null);
    var SEL_0_0_0_1_3 = new Tree(SEL_0_0_0_1, null, "Major Muscle Groups", null);
    var SEL_0_0_0_1_4 = new Tree(SEL_0_0_0_1, null, "Full Body", null);

    var SEL_0_0_0_2_0 = new Tree(SEL_0_0_0_2, null, "Abs", null);
    var SEL_0_0_0_2_1 = new Tree(SEL_0_0_0_2, null, "Upper Body", null);
    var SEL_0_0_0_2_2 = new Tree(SEL_0_0_0_2, null, "Lower Body", null);
    var SEL_0_0_0_2_3 = new Tree(SEL_0_0_0_2, null, "Major Muscle Groups", null);
    var SEL_0_0_0_2_4 = new Tree(SEL_0_0_0_2, null, "Full Body", null);

 
    // 40 minute branch
    var SEL_0_0_1_0_0 = new Tree(SEL_0_0_1_0, null, "Upper Body Stretch", null);
    var SEL_0_0_1_0_1 = new Tree(SEL_0_0_1_0, null, "Lower Body Stretch", null);
    var SEL_0_0_1_0_2 = new Tree(SEL_0_0_1_0, null, "Full Body Stretch", null);

    var SEL_0_0_1_1_0 = new Tree(SEL_0_0_1_1, null, "Abs", null);
    var SEL_0_0_1_1_1 = new Tree(SEL_0_0_1_1, null, "Upper Body", null);
    var SEL_0_0_1_1_2 = new Tree(SEL_0_0_1_1, null, "Lower Body", null);
    var SEL_0_0_1_1_3 = new Tree(SEL_0_0_1_1, null, "Major Muscle Groups", null);
    var SEL_0_0_1_1_4 = new Tree(SEL_0_0_1_1, null, "Full Body", null);

    var SEL_0_0_1_2_0 = new Tree(SEL_0_0_1_2, null, "Abs", null);
    var SEL_0_0_1_2_1 = new Tree(SEL_0_0_1_2, null, "Upper Body", null);
    var SEL_0_0_1_2_2 = new Tree(SEL_0_0_1_2, null, "Lower Body", null);
    var SEL_0_0_1_2_3 = new Tree(SEL_0_0_1_2, null, "Major Muscle Groups", null);
    var SEL_0_0_1_2_4 = new Tree(SEL_0_0_1_2, null, "Full Body", null);

    // 60 minute branch
    var SEL_0_0_2_0_0 = new Tree(SEL_0_0_2_0, null, "Upper Body Stretch", null);
    var SEL_0_0_2_0_1 = new Tree(SEL_0_0_2_0, null, "Lower Body Stretch", null);
    var SEL_0_0_2_0_2 = new Tree(SEL_0_0_2_0, null, "Full Body Stretch", null);

    var SEL_0_0_2_1_0 = new Tree(SEL_0_0_2_1, null, "Abs", null);
    var SEL_0_0_2_1_1 = new Tree(SEL_0_0_2_1, null, "Upper Body", null);
    var SEL_0_0_2_1_2 = new Tree(SEL_0_0_2_1, null, "Lower Body", null);
    var SEL_0_0_2_1_3 = new Tree(SEL_0_0_2_1, null, "Major Muscle Groups", null);
    var SEL_0_0_2_1_4 = new Tree(SEL_0_0_2_1, null, "Full Body", null);

    var SEL_0_0_2_2_0 = new Tree(SEL_0_0_2_2, null, "Abs", null);
    var SEL_0_0_2_2_1 = new Tree(SEL_0_0_2_2, null, "Upper Body", null);
    var SEL_0_0_2_2_2 = new Tree(SEL_0_0_2_2, null, "Lower Body", null);
    var SEL_0_0_2_2_3 = new Tree(SEL_0_0_2_2, null, "Major Muscle Groups", null);
    var SEL_0_0_2_2_4 = new Tree(SEL_0_0_2_2, null, "Full Body", null);

    // add the children of the root (first level)
    OPT_TREE.addChildren([SEL_0_0, SEL_0_1, SEL_0_2]);

    // add the grandchildren of the root (second level)
    SEL_0_0.addChildren([SEL_0_0_0, SEL_0_0_1, SEL_0_0_2]);
    SEL_0_1.addChildren([SEL_0_1_0, SEL_0_1_1, SEL_0_1_2]);
    SEL_0_2.addChildren([SEL_0_2_0, SEL_0_2_1, SEL_0_2_2]);

 
    // add the grand-grand children of the root (third level)
    // Quick Workout Now Branch
    SEL_0_0_0.addChildren([SEL_0_0_0_0, SEL_0_0_0_1, SEL_0_0_0_2]);
    SEL_0_0_1.addChildren([SEL_0_0_1_0, SEL_0_0_1_1, SEL_0_0_1_2]);
    SEL_0_0_2.addChildren([SEL_0_0_2_0, SEL_0_0_2_1, SEL_0_0_2_2]);

    // Personalized Workout Branch
    SEL_0_1_0.addChildren([SEL_0_1_0_0, SEL_0_1_0_1, SEL_0_1_0_2, SEL_0_1_0_3]);
    SEL_0_1_1.addChildren([SEL_0_1_1_0, SEL_0_1_1_1, SEL_0_1_1_2, SEL_0_1_1_3]);
    SEL_0_1_2.addChildren([SEL_0_1_2_0, SEL_0_1_2_1, SEL_0_1_2_2, SEL_0_1_2_3]);

    // Challenge Branch
    SEL_0_2_0.addChildren([SEL_0_2_0_0, SEL_0_2_0_1, SEL_0_2_0_2, SEL_0_2_0_3]);
    SEL_0_2_1.addChildren([SEL_0_2_1_0, SEL_0_2_1_1, SEL_0_2_1_2, SEL_0_2_1_3]);
    SEL_0_2_2.addChildren([SEL_0_2_2_0, SEL_0_2_2_1, SEL_0_2_2_2, SEL_0_2_2_3]);


    // add the grand-grand-grand children of the root (fourth level)
    //Quick Workout Branch
    // 20 minute
    SEL_0_0_0_0.addChildren([SEL_0_0_0_0_0, SEL_0_0_0_0_1, SEL_0_0_0_0_2]);
    SEL_0_0_0_1.addChildren([SEL_0_0_0_1_0, SEL_0_0_0_1_1, SEL_0_0_0_1_2, SEL_0_0_0_1_3, SEL_0_0_0_1_4]);
    SEL_0_0_0_2.addChildren([SEL_0_0_0_2_0, SEL_0_0_0_2_1, SEL_0_0_0_2_2, SEL_0_0_0_2_3, SEL_0_0_0_2_4]);

    // 40 minute
    SEL_0_0_1_0.addChildren([SEL_0_0_1_0_0, SEL_0_0_1_0_1, SEL_0_0_1_0_2]);
    SEL_0_0_1_1.addChildren([SEL_0_0_1_1_0, SEL_0_0_1_1_1, SEL_0_0_1_1_2, SEL_0_0_1_1_3, SEL_0_0_1_1_4]);
    SEL_0_0_1_2.addChildren([SEL_0_0_1_2_0, SEL_0_0_1_2_1, SEL_0_0_1_2_2, SEL_0_0_1_2_3, SEL_0_0_1_2_4]);


    // 60 minute
    SEL_0_0_2_0.addChildren([SEL_0_0_2_0_0, SEL_0_0_2_0_1, SEL_0_0_2_0_2]);
    SEL_0_0_2_1.addChildren([SEL_0_0_2_1_0, SEL_0_0_2_1_1, SEL_0_0_2_1_2, SEL_0_0_2_1_3, SEL_0_0_2_1_4]);
    SEL_0_0_2_2.addChildren([SEL_0_0_2_2_0, SEL_0_0_2_2_1, SEL_0_0_2_2_2, SEL_0_0_2_2_3, SEL_0_0_2_2_4]);

    return OPT_TREE;
  }

  function updateOpts(callerId) {
    if (currOpt > TOTAL_OPTS) {
      return;
    }
    var selTxt = getSelObj(callerId).text();
    var optElt = getOptObj(currOpt);
    optElt.val(selTxt);
    currOpt++;
    treeDown(selTxt);
    updateSelections();
  }

  function back() {
    if (currOpt <= 0){
      return;
    }
    currOpt--;
    var opt_elt = getOptObj(currOpt);
    opt_elt.val('');
    treeUp();
    updateSelections();
  }

  function treeDown(sel) {
    currNode = currNode.getChildById(sel);
  }

  function treeUp() {
    currNode = currNode.parent;
  }

  function updateSelections() {
    if (currNode.children.length == 0) {
      getForm().submit();
      return;
    }

    for (var i = 0; ; i++) {
      var selElt = getSelObj(i);
      var desElt = getDesObj(i);
      if (selElt.length == 0) {
        return;
      }
      if (i < currNode.children.length) {
        selElt.text(currNode.children[i].id);
        desElt.text(currNode.children[i].description);
        selElt.parent().show();
      } else {
        selElt.parent().hide();
      }
    }
  }

  function getOptObj(num) {
    return $("input[id$='opt" + num + "']");
  }

  // id can either be a number, or in the form sel#
  function getSelId(id) {
    return selId = "#" + ($.isNumeric(id) ? "sel" : "") + id;
  }

  function getSelObj(id) {
    var selId = getSelId(id);
    return $(selId).find(".option-title");
  }

  function getDesObj(id) {
    var selId = getSelId(id);
    return $(selId).find(".option-description");
  }

  function getForm() {
    return getOptObj(0)[0].form;
  }
</script>

<section class="concierge-section">
  <div id="concierge-lobby">
    <h1 id="concierge-welcome">Welcome to <span style = "color: #00ffff">polyfit</span>!<br>which service would you like today:</h1>
    <div class="grid-options">
      <% for i in 0..5 do %>
        <div id="<%= "sel#{i}" %>" class="option" style="display:none" onclick="updateOpts(this.id);">
          <div class="option-icon">
            <img class="option-icon-img" src="url"/>
          </div>
          <h2 class="option-title">Selection <%= "#{i}" %></h2>
          <p class="option-description">Unexpected freetime! I'm going to hit the gym!</p>
        </div>
      <% end %>
    </div>
  </div>
</section>

<div onclick="back();">
  <p>Back</p>
</div>

<div style="display:none">
  <%= render 'form' %>
</div>